//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "course_prerequisites")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub course_id: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub prerequisite_course_id: String,
    pub requirement_type: Option<String>,
    pub credits_required: Option<i32>,
    pub created_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::courses::Entity",
        from = "Column::CourseId",
        to = "super::courses::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Courses2,
    #[sea_orm(
        belongs_to = "super::courses::Entity",
        from = "Column::PrerequisiteCourseId",
        to = "super::courses::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Courses1,
}

impl ActiveModelBehavior for ActiveModel {}
