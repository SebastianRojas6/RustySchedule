//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use super::sea_orm_active_enums::DayType;
use super::sea_orm_active_enums::SessionType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "course_schedules")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub course_id: String,
    pub day: DayType,
    pub start_time: Time,
    pub end_time: Time,
    pub session_type: SessionType,
    pub location_detail: Option<String>,
    pub created_at: Option<DateTime>,
    pub facility_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::courses::Entity",
        from = "Column::CourseId",
        to = "super::courses::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Courses,
    #[sea_orm(
        belongs_to = "super::facilities::Entity",
        from = "Column::FacilityId",
        to = "super::facilities::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Facilities,
}

impl Related<super::courses::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Courses.def()
    }
}

impl Related<super::facilities::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Facilities.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
